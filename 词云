package txt;

import java.io.File;
import java.io.IOException;

import jxl.Workbook;
import jxl.write.Label;
import jxl.write.WritableSheet;
import jxl.write.WritableWorkbook;
import jxl.write.WriteException;
import jxl.write.biff.RowsExceededException;

public class main {

	public static void main(String[] args) throws IOException, RowsExceededException, WriteException 
	{
		
		String filePath = "C:\\Users\\Ragna\\Desktop\\work\\路透社新闻.txt";
		String st = ReadTxtFile.readTxt(filePath);
		String[] array=st.split(" ");
		
		String[] stoparray= {"的","地","得","，","。","【","】","·","１","２","","4","5","６","７","８","9","0","“","：","”"};
					
		//声明线性表
		WordFreqList wfl = new WordFreqList(array.length);
		//判断array[n]中的元素是否在线性表中
		for(int n =0;n<array.length;n++)
		{
			int x=wfl.find(array[n]);//标记字符串在线性表中的位置
			if(x==-1)
			{
				WordFreq temp = new WordFreq(array[n],1);
				wfl.set(temp);
			}
			else 
			{
				wfl.element[x].number++;			
			}
		}
		
		//利用停用词表删除
		for(int i =0;i<stoparray.length;i++)
		{
			int x=wfl.find(stoparray[i]);
			if(x>-1)
			{
				wfl.remove(stoparray[i]);
			}
		}

		for(int n =0;n<wfl.n;n++)
		{
			System.out.println(wfl.element[n].word +" " +wfl.element[n].number);
		}
	
	}
	
	

}
package txt;

import java.io.*;
public class ReadTxtFile 
{
	public static String readTxt(String filePath) 
	{
		try 
		{
			File file = new File(filePath);
			StringBuffer stb = new StringBuffer();
			if(file.isFile() && file.exists())
			{
				InputStreamReader isr = new InputStreamReader(new FileInputStream(file), "utf-8");
				BufferedReader br = new BufferedReader(isr);
				String lineTxt = null;
				while ((lineTxt = br.readLine()) != null) 
				{ 
					stb=stb.append(lineTxt);
					
				}
				String st= stb.toString();
				br.close();
				return st;
			} 	
			else { 
					System.out.println("出现异常!");
					return null;
				}
		} 
		catch (Exception e)
		{
			System.out.println("出现了一个问题!");
		}
		return null;
	}
	

}
package txt;

public class WordFreq {

	public  String word;
	public int number;
	public WordFreq(String string, int i) {
		word =string;
		number=i;
	}
	public WordFreq() {
		word ="";
		number=0;
	}
}
package txt;

public class WordFreqList extends Object{
	public  WordFreq[] element;
	public  int n;
	public WordFreqList(int length){
		this.element=new WordFreq[length];
		this.n=n;
	}
	public WordFreqList() {

	}
	
	public void set(WordFreq wf)
	{
		this.element[n]=wf;
		this.n++;
	}
	
	public int find(String st)
	{
		for(int i =0;i<this.n;i++)
		{
			if(this.element[i].word.equals(st))
				return i;
		}
		return -1;
	}
	public void remove(String st)
	{
		int x = this.find(st);
		for(int j=x;j<this.n;j++)
			this.element[j]=this.element[j+1];
		this.element[this.n-1]=null;
		this.n--;
		
		
	}

}
